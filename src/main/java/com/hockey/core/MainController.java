package com.hockey.core;

import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.hockey.core.dao.ConferenceRepository;
import com.hockey.core.model.Conference;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("api")
public class MainController {
  Logger logger = Logger.getLogger(MainController.class);
  
  
  @Autowired // This means to get the bean called conferenceRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private ConferenceRepository conferenceRepository;

  
  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewConference (@RequestParam String name) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
		
	logger.debug("addNewConference has been reached");
		
    Conference n = new Conference();
    n.setName(name);
    conferenceRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public List<Conference> getAllConferences() {
    // This returns a JSON or XML with the users
	logger.debug("getAllConferences has been reached");
	return (List<Conference>) conferenceRepository.findAll();
  }
}